version: 2
references:
  workspace: &workspace
    ~/src

  android_config: &android_config
    working_directory: *workspace
    docker:
      - image: circleci/android:api-28-alpha
    environment:
      TERM: dumb
      _JAVA_OPTIONS: "-Xmx2048m -XX:+UnlockExperimentalVMOptions -XX:+UseCGroupMemoryLimitForHeap"
      GRADLE_OPTS: '-Dorg.gradle.jvmargs="-Xmx2048m"'

  gradle_key: &gradle_key
    jars-{{ checksum "gradle/wrapper/gradle-wrapper.properties" }}-{{ checksum "build.gradle" }}-{{ checksum "app/build.gradle" }}

  gem_key: &gems_key
    gems-{{ checksum "Gemfile.lock" }}

  restore_gradle_cache: &restore_gradle_cache
    restore_cache:
      key: *gradle_key

  restore_gems_cache: &restore_gems_cache
    restore_cache:
      key: *gems_key

  save_gradle_cache: &save_gradle_cache
    save_cache:
      key: *gradle_key
      paths:
        - ~/.gradle
        - ~/.m2

  save_gems_cache: &save_gems_cache
    save_cache:
      key: *gems_key
      paths:
        - vendor/bundle

  ruby_dependencies: &ruby_dependencies
    run:
      name: Download Ruby Dependencies
      command: |
        gem install bundler
        bundle check || bundle install --path vendor/bundle

  android_dependencies: &android_dependencies
    run:
      name: Download Android Dependencies
      command: ./gradlew androidDependencies

  decode_android_key: &decode_android_key
    run:
      name: Decode Android key store
      command: echo $KEYSTORE | base64 -di | tee keystore.jks app/keystore.jks > /dev/null

  create_google_play_key: &create_google_play_key
    run:
      name: Create Google Play Key
      command: echo $GOOGLE_PLAY_KEY > google-play-key.json

jobs:

  #Run Unit Test
  test_unit:
    <<: *android_config
    steps:
      - checkout
      - *restore_gradle_cache
      - *restore_gems_cache
      - *ruby_dependencies
      - *android_dependencies
      - *save_gradle_cache
      - *save_gems_cache

      - run:
          name: Run Unit Tests
          command: bundle exec fastlane unit_tests

      - store_artifacts:
          path: app/build/reports
          destination: /reports/

      - store_test_results:
          path: app/build/test-results
          destination: /test-results

  # Run UI Test
  test_instrumentation:
    <<: *android_config
    steps:
      - checkout
      - *restore_gradle_cache
      - *restore_gems_cache
      - *ruby_dependencies
      - *android_dependencies
      - *save_gradle_cache
      - *save_gems_cache

#      - run:
#          name: Authorize to gcloud
#          command: gcloud auth activate-service-account --key-file=gcloud-service-key.json --project=testfastlane-e6694

      - store_artifacts:
          path: app/build/outputs/apk
          destination: /apk/

      - run:
          name: Run instrumentation tests in Firebase Testlab
          command: bundle exec fastlane instrumentation_tests_testlab

#      - run:
#          name: Send apk to slack
#          command: bundle exec fastlane send_to_slack

      - store_artifacts:
          path: firebase/
          destination: /firebase/

  deploy_play_store:
    <<: *android_config
    steps:
      - checkout
      - *restore_gradle_cache
      - *restore_gems_cache
      - *ruby_dependencies
      - *android_dependencies
      - *save_gradle_cache
      - *save_gems_cache
      - *decode_android_key
      - *create_google_play_key

#      - run:
#          name: Create keystore.jks
#          command: echo $RELEASE_KEYSTORE_BASE64 | base64 -d > ../keystore.jks

      - run:
          name: Deploy to Play Store
          command: bundle exec fastlane deploy_to_play_store

      - store_artifacts:
          path: app/build/outputs/apk/
          destination: /apk/

      - store_artifacts:
          path: app/build/outputs/mapping/
          destination: /mapping/

workflows:
  version: 2
  workflow:
    jobs:
      - test_unit
      - test_instrumentation:
          requires:
            - test_unit

      - deploy_play_store:
          requires:
            - test_unit
            - test_instrumentation